# Python AI Service Dockerfile (GPU 지원)
# GPU 기반 오디오 분석 및 비트맵 생성을 위한 컨테이너
FROM nvidia/cuda:11.8.0-devel-ubuntu22.04

# 환경 변수 설정
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive
ENV CUDA_VISIBLE_DEVICES=0

# 작업 디렉토리 설정
WORKDIR /app

# 시스템 패키지 업데이트 및 필요한 도구 설치
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    ffmpeg \
    libsndfile1 \
    libsndfile1-dev \
    git \
    curl \
    wget \
    build-essential \
    pkg-config \
    libffi-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Python 심볼릭 링크 생성
RUN ln -s /usr/bin/python3 /usr/bin/python

# pip 업그레이드
RUN python -m pip install --upgrade pip

# PyTorch 및 CUDA 지원 설치 (GPU 버전)
RUN pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118

# requirements.txt 복사 및 Python 의존성 설치
COPY requirements.txt .
# 1) 먼저 Cython + 필요 패키지를 설치
RUN pip install --no-cache-dir cython numpy scipy mido

# 2) 그 다음 requirements.txt를 통해 나머지 의존성 설치 (madmom 포함)
RUN pip install --no-cache-dir -r requirements.txt

# yt-dlp 최신 버전 설치
RUN pip install --upgrade yt-dlp

# 애플리케이션 코드 복사
COPY src/ ./src/

# 모델 디렉토리 생성
RUN mkdir -p /app/models /app/temp

# 비특권 사용자 생성 및 전환 (보안)
RUN useradd -m -u 1001 appuser && \
    chown -R appuser:appuser /app

USER appuser

# 포트 노출
EXPOSE 8000

# 헬스체크 설정
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:8000/api/health || exit 1

# 애플리케이션 시작
CMD ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "1"]